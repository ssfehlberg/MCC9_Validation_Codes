
set( ubana_VERSION 07.05.00.01 )
set( ubana_UPS_VERSION v07_05_00_01 )


####### Expanded from @PACKAGE_INIT@ by configure_package_config_file() #######
####### Any changes to this file will be overwritten by the next CMake run ####
####### The input file was product-config.cmake.in                            ########

get_filename_component(PACKAGE_PREFIX_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../../../../" ABSOLUTE)

macro(set_and_check _var _file)
  set(${_var} "${_file}")
  if(NOT EXISTS "${_file}")
    message(FATAL_ERROR "File or directory ${_file} referenced by variable ${_var} does not exist !")
  endif()
endmacro()

macro(check_required_components _NAME)
  foreach(comp ${${_NAME}_FIND_COMPONENTS})
    if(NOT ${_NAME}_${comp}_FOUND)
      if(${_NAME}_FIND_REQUIRED_${comp})
        set(${_NAME}_FOUND FALSE)
      endif()
    endif()
  endforeach()
endmacro()

####################################################################################


## find_ups_product directives
## remember that these are minimum required versions
    find_ups_product( larcorealg  )
    find_ups_product( canvas  )
    find_ups_product( cppunit  )
    find_ups_product( clhep  )
    find_ups_product( cetlib_except  )
    find_ups_product( cetlib v2_01_00 )
    find_ups_boost( v1_50_0 )
    find_ups_product( sqlite  )
    find_ups_product( fhiclcpp  )
    find_ups_product( python  )
    find_ups_product( messagefacility  )
    find_ups_product( hep_concurrency  )
    find_ups_product( tbb  )
    find_ups_product( range  )
    find_ups_product( larcoreobj  )
    find_ups_root(  )
    find_ups_product( lardataobj  )
    find_ups_product( nusimdata  )
    find_ups_product( dk2nudata v01_05_01 )
    find_ups_product( lardataalg  )
    find_ups_product( ubreco v1_00_00 )
    find_ups_product( ubsim v1_00_00 )
    find_ups_product( ubevt v1_00_00 )
    find_ups_product( ubcore v1_00_00 )
    find_ups_product( ubobj v1_00_00 )
    find_ups_product( artdaq_core v1_00_00 )
    find_ups_product( cetpkgsupport v1_08_03 )
    find_ups_product( TRACE v3_03_00 )
    find_ups_product( lardata v1_00_00 )
    find_ups_product( larcore  )
    find_ups_product( art  )
    find_ups_product( canvas_root_io  )
    find_ups_product( nutools  )
    find_ups_product( genie  )
    find_ups_product( dk2nugenie  )
    find_ups_product( libwda  )
    find_ups_product( postgresql  )
    find_ups_product( geant4  )
    find_ups_product( xerces_c v3_0_0 )
    find_ups_product( ifdh_art v1_00_00 )
    find_ups_product( ifdhc  )
    find_ups_product( ifbeam  )
    find_ups_product( nucondb  )
    find_ups_product( larevt v1_00_00 )
    find_ups_product( gsl v1_00_00 )
    find_ups_product( larsim v1_00_00 )
    find_ups_product( marley  )
    find_ups_product( larreco v1_00_00 )
    find_ups_product( eigen  )
    find_ups_product( protobuf  )
    find_ups_product( tensorflow  )
    find_ups_product( swtrigger v1_00_00 )
    find_ups_product( ubraw v1_00_00 )
    find_ups_product( uboonedaq_datatypes v1_00_00 )
    find_ups_product( larana v1_00_00 )
    find_ups_product( larpandora v1_00_00 )
    find_ups_product( pandora v02_00_00 )
    find_ups_product( larpandoracontent v02_04_00 )


## find_library directives
    if( NOT XML2 )
      cet_find_library( XML2 NAMES xml2 PATHS /scratch/workspace/build-nulite-matrix/BUILDTYPE/prof/QUAL/s70-e17/label1/swarm/label2/SLF6/build/libxml2/v2_9_5/Linux64bit+2.6-2.12-prof/lib NO_DEFAULT_PATH )
    endif()
    if( NOT GREINSEGHAL )
      cet_find_library( GREINSEGHAL NAMES GReinSeghal PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
    endif()
      set( UBANA_ANALYSISTREE_MCTRUTH_MCTRUTHBASE $ENV{UBANA_LIB}/libubana_AnalysisTree_MCTruth_MCTruthBase.so )
      set( UBANA_ANALYSISTREE_MCTRUTH_MCTRUTHTESTANA_MODULE $ENV{UBANA_LIB}/libubana_AnalysisTree_MCTruth_MCTruthTestAna_module.so )
      set( UBANA_ANALYSISTREE_MCTRUTH_ASSOCIATIONSTRUTH_TOOL $ENV{UBANA_LIB}/libubana_AnalysisTree_MCTruth_AssociationsTruth_tool.so )
      set( UBANA_ANALYSISTREE_MCTRUTH_BACKTRACKERTRUTH_TOOL $ENV{UBANA_LIB}/libubana_AnalysisTree_MCTruth_BackTrackerTruth_tool.so )
      set( UBANA_ANALYSISTREE_ANALYSISTREE_MODULE $ENV{UBANA_LIB}/libubana_AnalysisTree_AnalysisTree_module.so )
      set( SPECALIBRATIONCODE $ENV{UBANA_LIB}/libSPEcalibrationCode.so )
      set( SPECALIBRATION_MODULE $ENV{UBANA_LIB}/libSPEcalibration_module.so )
      set( FEMEMULATOR_MODULE $ENV{UBANA_LIB}/libFEMemulator_module.so )
      set( SWTRIGGER_MODULE $ENV{UBANA_LIB}/libSWTrigger_module.so )
      set( UBANA_CALIBRATIONS $ENV{UBANA_LIB}/libubana_Calibrations.so )
      set( CALIBRATIONTPC_MODULE $ENV{UBANA_LIB}/libCalibrationTPC_module.so )
      set( CALIBRATIONDEDX_MODULE $ENV{UBANA_LIB}/libCalibrationdEdX_module.so )
      set( DIFFUSION_MODULE $ENV{UBANA_LIB}/libDiffusion_module.so )
      set( EXTRACTPEDESTALINFORMATION_MODULE $ENV{UBANA_LIB}/libExtractPedestalInformation_module.so )
      set( KPLANE2_MODULE $ENV{UBANA_LIB}/libKplane2_module.so )
      set( LIFETIMEQAQC_MODULE $ENV{UBANA_LIB}/libLifetimeQAQC_module.so )
      set( LIFETIME_MODULE $ENV{UBANA_LIB}/libLifetime_module.so )
      set( NOISEFILTER_MODULE $ENV{UBANA_LIB}/libNoiseFilter_module.so )
      set( VALIDATELIFETIME_MODULE $ENV{UBANA_LIB}/libValidateLifetime_module.so )
      set( XYZCORRECTION_MODULE $ENV{UBANA_LIB}/libXYZcorrection_module.so )
      set( XYZVALIDATIOIN_MODULE $ENV{UBANA_LIB}/libXYZvalidatioin_module.so )
      set( UBANA_CHARGEDTRACKMULTIPLICITY_MC_CTMMCANA_MODULE $ENV{UBANA_LIB}/libubana_ChargedTrackMultiplicity_MC_CTMMCAna_module.so )
      set( UBANA_CHARGEDTRACKMULTIPLICITY_DATAON_CTMDATAONANA_MODULE $ENV{UBANA_LIB}/libubana_ChargedTrackMultiplicity_DataON_CTMDataONAna_module.so )
      set( UBANA_CHARGEDTRACKMULTIPLICITY_DATAOFF_CTMDATAOFFANA_MODULE $ENV{UBANA_LIB}/libubana_ChargedTrackMultiplicity_DataOFF_CTMDataOFFAna_module.so )
      set( COSMICFLASHTAGGERANA_MODULE $ENV{UBANA_LIB}/libCosmicFlashTaggerAna_module.so )
      set( COSMICFLASHTAGGER_MODULE $ENV{UBANA_LIB}/libCosmicFlashTagger_module.so )
      set( UBANA_COSMICTAGGING_COSMICTAGGINGALGORITHMS $ENV{UBANA_LIB}/libubana_CosmicTagging_CosmicTaggingAlgorithms.so )
      set( CCINCLUSIVETRUTHFILTER_MODULE $ENV{UBANA_LIB}/libCCInclusiveTruthFilter_module.so )
      set( UBANA_LEEPHOTONANALYSIS $ENV{UBANA_LIB}/libubana_LEEPhotonAnalysis.so )
      set( GENIETEST_MODULE $ENV{UBANA_LIB}/libGENIETest_module.so )
      set( LEEPHOTONANALYSIS_MODULE $ENV{UBANA_LIB}/libLEEPhotonAnalysis_module.so )
      set( NCDELTARADIATIVE_MODULE $ENV{UBANA_LIB}/libNCDeltaRadiative_module.so )
      set( RECOTRUETEST_MODULE $ENV{UBANA_LIB}/libRecoTrueTest_module.so )
      set( SIGNALFILTER_MODULE $ENV{UBANA_LIB}/libSignalFilter_module.so )
      set( FLASH_MODULE $ENV{UBANA_LIB}/libflash_module.so )
      set( MUCSGAINANA_MODULE $ENV{UBANA_LIB}/libMuCSGainAna_module.so )
      set( MUCST0FINDER_MODULE $ENV{UBANA_LIB}/libMuCST0Finder_module.so )
      set( MUCSTRACKFINDER_MODULE $ENV{UBANA_LIB}/libMuCSTrackFinder_module.so )
      set( T0TRACKCALIB_MODULE $ENV{UBANA_LIB}/libT0TrackCalib_module.so )
      set( TPCOBJECTCREATOR_MODULE $ENV{UBANA_LIB}/libTPCObjectCreator_module.so )
      set( UBT0FINDER_MODULE $ENV{UBANA_LIB}/libUBT0Finder_module.so )
      set( UBANA_SELECTIONTOOL_OPT0FINDERBASE $ENV{UBANA_LIB}/libubana_SelectionTool_OpT0FinderBase.so )
      set( UBANA_SELECTIONTOOL_OPT0FINDERALGORITHMS $ENV{UBANA_LIB}/libubana_SelectionTool_OpT0FinderAlgorithms.so )
      set( CELLTREEUB_MODULE $ENV{UBANA_LIB}/libCellTreeUB_module.so )
      set( UBANA_OPTICALDETECTORANA $ENV{UBANA_LIB}/libubana_OpticalDetectorAna.so )
      set( FLASHTRIGGER_MODULE $ENV{UBANA_LIB}/libFlashTrigger_module.so )
      set( OPDIGITSATURATIONCORRECTION_MODULE $ENV{UBANA_LIB}/libOpDigitSaturationCorrection_module.so )
      set( SIMPLEFLASHFINDER_MODULE $ENV{UBANA_LIB}/libSimpleFlashFinder_module.so )
      set( UBBASICOPTICALANA_MODULE $ENV{UBANA_LIB}/libUBBasicOpticalAna_module.so )
      set( OPTICALSUBEVENTS $ENV{UBANA_LIB}/libOpticalSubEvents.so )
      set( SUBEVENTBUILDER_MODULE $ENV{UBANA_LIB}/libSubEventBuilder_module.so )
      set( UBOONE_LEEPRECUTALGO $ENV{UBANA_LIB}/libuboone_LEEPreCutAlgo.so )
      set( DLPMTPRECUTS_MODULE $ENV{UBANA_LIB}/libDLPMTPreCuts_module.so )
      set( UBANA_PATTERNFILTER_PMALGS $ENV{UBANA_LIB}/libubana_PatternFilter_PMAlgs.so )
      set( UBANA_PATTERNFILTER_ARTMODULES_ANODECATHODETRACKANA_MODULE $ENV{UBANA_LIB}/libubana_PatternFilter_ArtModules_AnodeCathodeTrackAna_module.so )
      set( UBANA_PATTERNFILTER_ARTMODULES_ANODECATHODETRACKFILTER_MODULE $ENV{UBANA_LIB}/libubana_PatternFilter_ArtModules_AnodeCathodeTrackFilter_module.so )
      set( LOWLEVELNUEFILTER_MODULE $ENV{UBANA_LIB}/libLowLevelNueFilter_module.so )
      set( OPFLASHFILTER_MODULE $ENV{UBANA_LIB}/libOpFlashFilter_module.so )
      set( TPCNEUTRINOIDANA_MODULE $ENV{UBANA_LIB}/libTPCNeutrinoIDAna_module.so )
      set( TPCNEUTRINOIDFILTER_MODULE $ENV{UBANA_LIB}/libTPCNeutrinoIDFilter_module.so )
      set( TPCNEUTRINOID_MODULE $ENV{UBANA_LIB}/libTPCNeutrinoID_module.so )
      set( TPCNEUTRINOIDALGS $ENV{UBANA_LIB}/libTPCNeutrinoIDAlgs.so )
      set( ACPTTAGGER_MODULE $ENV{UBANA_LIB}/libACPTTagger_module.so )
      set( CANDIDATECONSISTENCY_MODULE $ENV{UBANA_LIB}/libCandidateConsistency_module.so )
      set( COSMICFLASHMATCH_MODULE $ENV{UBANA_LIB}/libCosmicFlashMatch_module.so )
      set( COSMICTAGGERANA_MODULE $ENV{UBANA_LIB}/libCosmicTaggerAna_module.so )
      set( COSMICTRACKHITTAGGER_MODULE $ENV{UBANA_LIB}/libCosmicTrackHitTagger_module.so )
      set( DEDXANA_MODULE $ENV{UBANA_LIB}/libDeDxAna_module.so )
      set( FLASHMATCHCALIB_MODULE $ENV{UBANA_LIB}/libFlashMatchCalib_module.so )
      set( GEOCOSMICTAGGER_MODULE $ENV{UBANA_LIB}/libGeoCosmicTagger_module.so )
      set( INTIMESTUDY_MODULE $ENV{UBANA_LIB}/libInTimeStudy_module.so )
      set( NEUTRINOFLASHMATCH_MODULE $ENV{UBANA_LIB}/libNeutrinoFlashMatch_module.so )
      set( NEUTRINOMCFLASH_MODULE $ENV{UBANA_LIB}/libNeutrinoMCFlash_module.so )
      set( PHOTONACTIVITY_MODULE $ENV{UBANA_LIB}/libPhotonActivity_module.so )
      set( RECOTRUEMATCHER_MODULE $ENV{UBANA_LIB}/libRecoTrueMatcher_module.so )
      set( SIMPLEANA_MODULE $ENV{UBANA_LIB}/libSimpleAna_module.so )
      set( STOPPINGMUONTAGGER_MODULE $ENV{UBANA_LIB}/libStoppingMuonTagger_module.so )
      set( TPCOBJECTMAKER_MODULE $ENV{UBANA_LIB}/libTPCObjectMaker_module.so )
      set( UBXSEC_MODULE $ENV{UBANA_LIB}/libUBXSec_module.so )
      set( UBOONECODE_UBOONE_UBXSEC_ALGORITHMS $ENV{UBANA_LIB}/libuboonecode_uboone_UBXSec_Algorithms.so )
      set( HITCOSMICTAG_BASE $ENV{UBANA_LIB}/libHitCosmicTag_Base.so )
      set( HITCOSMICTAG_ALGORITHMS $ENV{UBANA_LIB}/libHitCosmicTag_Algorithms.so )
      set( UBANA_LARSOFTEXAMPLES_USINGASSNSANA_MODULE $ENV{UBANA_LIB}/libubana_LArSoftExamples_UsingAssnsAna_module.so )
      set( UBANA_LARSOFTEXAMPLES_USINGHANDLESANA_MODULE $ENV{UBANA_LIB}/libubana_LArSoftExamples_UsingHandlesAna_module.so )
      include_directories ( $ENV{UBANA_INC} )

check_required_components(ubana)

